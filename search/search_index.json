{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home Page","text":"<p>This documentation outlines the backend endpoints for the CuraSync application, detailing their purpose, request structures, and expected response formats.</p> <p>Unlike traditional API documentation, which is typically written after development, this documentation has been created before backend implementation. The reason for this approach is to provide the frontend team with a clear understanding of:</p> <p>\u2705 The required request structure \u2013 What data needs to be sent in each API request. \u2705 Expected response formats \u2013 The structure and type of data each endpoint will return. \u2705 Error handling and status codes \u2013 How to handle various responses from the backend.</p> <p>By defining the API in advance, we ensure a seamless integration between frontend and backend development, allowing both teams to work in parallel efficiently.</p> <p>API Categories by User Roles The CuraSync API is organized into different categories based on user roles. Each category contains endpoints specific to that role\u2019s functionality:</p> <ul> <li> <p>Common \u2013 Includes endpoints shared across all user roles, such as authentication (<code>/login</code>, <code>/logout</code>) and general system interactions.</p> </li> <li> <p>Doctor  \u2013 Contains endpoints for doctors to manage patient records, write prescriptions, view reports, and track medical histories.</p> </li> <li> <p>Patient  \u2013 Provides endpoints for patients to access their medical history, view prescriptions, receive lab reports, and manage their profile.</p> </li> <li> <p>Laboratory  \u2013 Includes endpoints for laboratories to upload test reports, associate them with patient records, and send notifications upon completion.</p> </li> <li> <p>Pharmacy  \u2013 Features endpoints that allow pharmacies to verify prescriptions, process medication requests, and check availability of medicines.</p> </li> </ul>"},{"location":"Common/","title":"Common","text":""},{"location":"Common/#login","title":"Login","text":""},{"location":"Common/#endpoint","title":"Endpoint:","text":"<pre><code>POST /login\n</code></pre>"},{"location":"Common/#request-body","title":"Request Body:","text":"<pre><code>{\n  \"role\": \"doctor\",             // Role of the user: doctor, patient, pharmacy, lab\n  \"credential_type\": \"email\",   // Type of credential: id or email\n  \"credential_data\": \"admin@example.com\", // The actual id or email\n  \"password\": \"adminPass123\",     // Password for the user\n  \"deviceId\": \"d2b4a089-4531-4a29-a9f1-42a27a65d7bc\" // Generate a UUID in client side and send it\n}\n</code></pre>"},{"location":"Common/#response","title":"Response:","text":"<ul> <li>Success (200):<ul> <li>When login is successful and JWT is generated:</li> </ul> </li> </ul> <pre><code>{\n    \"message\": \"Login successful\",\n    \"accessToken\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJyb2xlIjoiYWRtaW4iLCJpZCI6IjEyMyJ9.bWIsfdxTYwHfkl5o3fTn\"\n}\n</code></pre> <pre><code>It will send a cookie, which includes refreshToken.\n</code></pre> <ul> <li>Missing fields (400):<ul> <li>If the required fields are missing:</li> <li>Status Code: <code>400 Bad Request</code></li> </ul> </li> </ul> <pre><code>  {\n    \"message\": \"The &lt;field&gt; field is required.\"\n  }\n</code></pre> <ul> <li>Invalid Credentials (401):<ul> <li>If the provided credentials do not match any user in the database:</li> <li>Status Code: <code>401 Unauthorized</code></li> </ul> </li> </ul> <pre><code>  {\n    \"message\": \"Invalid credentials\"\n  }\n</code></pre> <ul> <li>Internal Server Error (500):<ul> <li>If there\u2019s an unexpected error on the server:</li> <li>Status Code: <code>500 Internal Server Error</code></li> </ul> </li> </ul> <p><pre><code>  {\n    \"message\": \"Internal server error\"\n  }\n</code></pre> </p>"},{"location":"Common/#refresh","title":"Refresh","text":""},{"location":"Common/#endpoint_1","title":"Endpoint:","text":"<pre><code>POST /refresh\n</code></pre>"},{"location":"Common/#request-body_1","title":"Request Body:","text":"<pre><code>{\n  \"id\": \"D2354\",\n  \"role\": \"doctor\",\n  \"deviceId\": \"d2b4a089-4531-4a29-a9f1-42a27a65d7bc\"\n}\n</code></pre>"},{"location":"Common/#response_1","title":"Response:","text":"<ul> <li>Success (200):<ul> <li>When token refresh is successful and new JWT is generated:</li> </ul> </li> </ul> <pre><code>{\n    \"message\": \"New token successful generated\",\n    \"accessToken\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJyb2xlIjoiYWRtaW4iLCJpZCI6IjEyMyJ9.bWIsfdxTYwHfkl5o3fTn\"\n}\n</code></pre> <pre><code>It will send a cookie, which includes new refreshToken.\n</code></pre> <ul> <li>Missing required fields (400):<ul> <li>If the id/deviceId missing in the request body:</li> <li>Status Code: <code>400 Bad Request</code></li> </ul> </li> </ul> <pre><code>  {\n    \"message\": \"The &lt;field&gt; field is required.\"\n  }\n</code></pre> <ul> <li>Refresh token missing (401):<ul> <li>If the refreshToken is missing in the cookie:</li> <li>Status Code: <code>401 Unauthorized</code></li> </ul> </li> </ul> <pre><code>  {\n    \"message\": \"Unauthorized\"\n  }\n</code></pre> <ul> <li>Invalid refresh token (403):<ul> <li>If the refreshToken is invalid:</li> <li>Status Code: <code>403 Forbidden</code></li> </ul> </li> </ul> <pre><code>  {\n    \"message\": \"Refresh Token is invalid.\"\n  }\n</code></pre> <ul> <li>Internal Server Error (500):<ul> <li>If there\u2019s an unexpected error on the server:</li> <li>Status Code: <code>500 Internal Server Error</code></li> </ul> </li> </ul> <p><pre><code>  {\n    \"message\": \"Internal server error\"\n  }\n</code></pre> </p>"},{"location":"Common/#get-profile-details","title":"Get Profile Details","text":""},{"location":"Common/#endpoint_2","title":"Endpoint:","text":"<pre><code>GET /profile\n</code></pre>"},{"location":"Common/#headers","title":"Headers:","text":"<pre><code>{\n  \"Authorization\": \"Bearer &lt;your_jwt_token&gt;\"\n}\n</code></pre>"},{"location":"Common/#response_2","title":"Response:","text":"<ul> <li>Success (200):<ul> <li>Successfully retrieved profile:</li> </ul> </li> </ul> <pre><code>{\n  \"id\": \"123456\",\n  \"name\": \"John Doe\",\n  \"email\": \"john@example.com\",\n  \"role\": \"doctor\",\n  \"specialty\": \"Cardiology\"\n}\n</code></pre> <ul> <li>User not found (404):<ul> <li>If user not found in the database:</li> <li>Status Code: <code>404 Not Found</code></li> </ul> </li> </ul> <pre><code>  {\n    \"message\": \"User not found\"\n  }\n</code></pre> <ul> <li>Internal Server Error (500):<ul> <li>If there\u2019s an unexpected error on the server:</li> <li>Status Code: <code>500 Internal Server Error</code></li> </ul> </li> </ul> <pre><code>  {\n    \"message\": \"Internal server error\"\n  }\n</code></pre>"},{"location":"Common/#update-profile-details","title":"Update Profile Details","text":""},{"location":"Common/#endpoint_3","title":"Endpoint:","text":"<pre><code>POST /profile\n</code></pre>"},{"location":"Common/#headers_1","title":"Headers:","text":"<pre><code>{\n  \"Authorization\": \"Bearer &lt;your_jwt_token&gt;\"\n}\n</code></pre>"},{"location":"Common/#request-body_2","title":"Request Body:","text":"<ul> <li>The request body contains the fields that need to be updated. Any valid user fields can be included.</li> </ul> <pre><code>{\n  \"name\": \"John Doe\",\n  \"email\": \"john.doe@example.com\",\n  \"specialty\": \"Neurology\"\n}\n</code></pre>"},{"location":"Common/#response_3","title":"Response:","text":"<ul> <li>Success (200):<ul> <li>Successfully updated profile:</li> </ul> </li> </ul> <pre><code>{\n  \"message\": \"Profile updated successfully\"\n}\n</code></pre> <ul> <li>User not found (404):<ul> <li>If user not found in the database:</li> <li>Status Code: <code>404 Not Found</code></li> </ul> </li> </ul> <pre><code>  {\n    \"message\": \"User not found\"\n  }\n</code></pre> <ul> <li>Invalid Credentials (401):<ul> <li>If the provided JWT token invalid:</li> <li>Status Code: <code>401 Unauthorized</code></li> </ul> </li> </ul> <pre><code>  {\n    \"message\": \"Invalid token\"\n  }\n</code></pre> <ul> <li>Internal Server Error (500):<ul> <li>If there\u2019s an unexpected error on the server:</li> <li>Status Code: <code>500 Internal Server Error</code></li> </ul> </li> </ul> <p><pre><code>  {\n    \"message\": \"Internal server error\"\n  }\n</code></pre> </p>"},{"location":"Common/#logout","title":"Logout","text":""},{"location":"Common/#endpoint_4","title":"Endpoint:","text":"<pre><code>POST /logout\n</code></pre>"},{"location":"Common/#request-body_3","title":"Request Body:","text":"<pre><code>{\n  \"role\": \"doctor\",\n  \"id\": \"D2345\",\n  \"deviceId\": \"d2b4a089-4531-4a29-a9f1-42a27a65d7bc\"\n}\n</code></pre>"},{"location":"Common/#response_4","title":"Response:","text":"<ul> <li>Success (200):<ul> <li>When logout is successful:</li> </ul> </li> </ul> <pre><code>{\n    \"message\": \"Logged out from this device\"\n}\n</code></pre> <pre><code>It will clear a cookie, which includes refreshToken.\n</code></pre> <ul> <li>Missing fields (400):<ul> <li>If the required fields are missing:</li> <li>Status Code: <code>400 Bad Request</code></li> </ul> </li> </ul> <pre><code>  {\n    \"message\": \"The &lt;field&gt; field is required.\"\n  }\n</code></pre> <ul> <li>Internal Server Error (500):<ul> <li>If there\u2019s an unexpected error on the server:</li> <li>Status Code: <code>500 Internal Server Error</code></li> </ul> </li> </ul> <pre><code>  {\n    \"message\": \"Internal server error\"\n  }\n</code></pre>"},{"location":"Common/#logout-all","title":"Logout All","text":""},{"location":"Common/#endpoint_5","title":"Endpoint:","text":"<pre><code>POST /logout/all\n</code></pre>"},{"location":"Common/#request-body_4","title":"Request Body:","text":"<pre><code>{\n  \"role\": \"doctor\",\n  \"id\": \"D2345\"\n}\n</code></pre>"},{"location":"Common/#headers_2","title":"Headers:","text":"<pre><code>{\n  \"Authorization\": \"Bearer &lt;your_jwt_token&gt;\"\n}\n</code></pre>"},{"location":"Common/#response_5","title":"Response:","text":"<ul> <li>Success (200):<ul> <li>When logout is successful:</li> </ul> </li> </ul> <pre><code>{\n    \"message\": \"Logged out from all devices\"\n}\n</code></pre> <pre><code>It will clear a cookie, which includes refreshToken.\n</code></pre> <ul> <li>Missing fields (400):<ul> <li>If the required fields are missing:</li> <li>Status Code: <code>400 Bad Request</code></li> </ul> </li> </ul> <pre><code>  {\n    \"message\": \"The &lt;field&gt; field is required.\"\n  }\n</code></pre> <ul> <li>Invalid Credentials (401):<ul> <li>If the provided JWT token invalid:</li> <li>Status Code: <code>401 Unauthorized</code></li> </ul> </li> </ul> <pre><code>  {\n    \"message\": \"Invalid accessToken\"\n  }\n</code></pre> <ul> <li>Internal Server Error (500):<ul> <li>If there\u2019s an unexpected error on the server:</li> <li>Status Code: <code>500 Internal Server Error</code></li> </ul> </li> </ul> <pre><code>  {\n    \"message\": \"Internal server error\"\n  }\n</code></pre>"},{"location":"Doctor/","title":"Doctor","text":""},{"location":"Doctor/#register","title":"Register","text":""},{"location":"Doctor/#endpoint","title":"Endpoint:","text":"<pre><code>POST /doctor/register\n</code></pre>"},{"location":"Doctor/#request-body","title":"Request Body:","text":"<pre><code>{\n  \"name\": {\n    \"firstname\": \"John\",\n    \"middlename\": \"Michael\",\n    \"lastname\": \"Doe\"\n  },\n  \"address\": {\n    \"street\": \"123 Main St\",\n    \"city\": \"New York\",\n    \"state\": \"NY\",\n    \"zipCode\": \"10001\",\n    \"country\": \"USA\"\n  },\n  \"nicNo\": \"987654321V\",\n  \"mobileNo\": \"+1-123-456-7890\",\n  \"email\": \"johndoe@example.com\",\n  \"password\": \"SecurePass123!\",\n  \"specialization\": \"Cardiologist\",\n  \"govDocRegId\": \"DOC12345678\",\n  \"birthOfDate\": \"1985-07-20\",\n  \"qualifications\": [\n    \"MBBS - Harvard Medical School\",\n    \"MD - Cardiology\"\n  ],\n  \"experience\": [\n    {\n      \"hospital\": \"NYC General Hospital\",\n      \"years\": 5\n    },\n    {\n      \"hospital\": \"Boston Medical Center\",\n      \"years\": 3\n    }\n  ],\n  \"currentWorkingHospitals\": [\n    \"New York-Presbyterian Hospital\",\n    \"Mount Sinai Hospital\"\n  ],\n  \"socialMediaLinks\": {\n    \"linkedin\": \"https://www.linkedin.com/in/johndoe\",\n    \"twitter\": \"https://twitter.com/johndoe\"\n  },\n  \"description\": \"Experienced cardiologist with a passion for patient care and medical research.\",\n  \"profilePic\": \"https://example.com/images/johndoe.jpg\"\n}\n</code></pre>"},{"location":"Doctor/#response","title":"Response:","text":"<ul> <li>Success (200):<ul> <li>When register is successful and return the Doctor Id:</li> </ul> </li> </ul> <pre><code>{\n    \"message\": \"Successfully Registered\",\n    \"id\": \"D12345\"\n}\n</code></pre> <ul> <li>Missing Required Fields (400):<ul> <li>If the required field is missing:</li> <li>Status Code: <code>400 Bad Request</code></li> </ul> </li> </ul> <pre><code>  {\n    \"message\": \"The &lt;field&gt; field is required.\"\n  }\n</code></pre> <ul> <li>Fields Invalid Format (400):<ul> <li>If the required field is invalid:</li> <li>Status Code: <code>400 Bad Request</code></li> </ul> </li> </ul> <pre><code>  {\n    \"message\": \"Invalid &lt;field&gt;. Please provide valid &lt;field&gt;.\"\n  }\n</code></pre> <ul> <li>Duplicate Field (409):<ul> <li>If the unique fields like nicNo, govRegNo, email is already in the database:</li> <li>Status Code: <code>409 Conflict</code></li> </ul> </li> </ul> <pre><code>  {\n    \"message\": \"The &lt;field&gt; is already in use.\"\n  }\n</code></pre> <ul> <li>Data Type Mismatch (422):<ul> <li>If the dataType send was incorrect:</li> <li>Status Code: <code>422 Unprocessable Entity</code></li> </ul> </li> </ul> <pre><code>  {\n    \"message\": \"The &lt;field&gt; field must be &lt;dataType&gt;.\"\n  }\n</code></pre> <ul> <li>Internal Server Error (500):<ul> <li>If there\u2019s an unexpected error on the server:</li> <li>Status Code: <code>500 Internal Server Error</code></li> </ul> </li> </ul> <p><pre><code>  {\n    \"message\": \"Internal server error\"\n  }\n</code></pre> </p>"},{"location":"Doctor/#get-data-that-required-in-the-doctors-home-page","title":"Get data that required in the doctor\u2019s home page","text":""},{"location":"Doctor/#endpoint_1","title":"Endpoint:","text":"<pre><code>GET /doctor/home\n</code></pre>"},{"location":"Doctor/#headers","title":"Headers:","text":"<pre><code>{\n  \"Authorization\": \"Bearer &lt;your_jwt_token&gt;\"\n}\n</code></pre>"},{"location":"Doctor/#response_1","title":"Response:","text":"<ul> <li>Success (200):<ul> <li>Successfully returned data:</li> </ul> </li> </ul> <pre><code>{\n  \"doctorId\": \"D12345\",\n  \"name\": {\n    \"firstname\": \"John\",\n    \"middlename\": \"Michael\",\n    \"lastname\": \"Doe\"\n  },\n  \"address\": {\n    \"street\": \"123 Main St\",\n    \"city\": \"New York\",\n    \"state\": \"NY\",\n    \"zipCode\": \"10001\",\n    \"country\": \"USA\"\n  },\n  \"nicNo\": \"987654321V\",\n  \"mobileNo\": \"+1-123-456-7890\",\n  \"email\": \"johndoe@example.com\",\n  \"specialization\": \"Cardiologist\",\n  \"govDocRegId\": \"DOC12345678\",\n  \"birthOfDate\": \"1985-07-20\",\n  \"qualifications\": [\n    \"MBBS - Harvard Medical School\",\n    \"MD - Cardiology\"\n  ],\n  \"experience\": [\n    {\n      \"hospital\": \"NYC General Hospital\",\n      \"years\": 5\n    },\n    {\n      \"hospital\": \"Boston Medical Center\",\n      \"years\": 3\n    }\n  ],\n  \"currentWorkingHospitals\": [\n    \"New York-Presbyterian Hospital\",\n    \"Mount Sinai Hospital\"\n  ],\n  \"socialMediaLinks\": {\n    \"linkedin\": \"https://www.linkedin.com/in/johndoe\",\n    \"twitter\": \"https://twitter.com/johndoe\"\n  },\n  \"description\": \"Experienced cardiologist with a passion for patient care and medical research.\",\n  \"profilePic\": \"https://example.com/images/johndoe.jpg\",\n  \"patientsCount\": 20,\n}\n</code></pre> <ul> <li>User not found (404):<ul> <li>If user not found in the database:</li> <li>Status Code: <code>404 Not Found</code></li> </ul> </li> </ul> <pre><code>  {\n    \"message\": \"User not found\"\n  }\n</code></pre> <ul> <li>Role do not have access (403):<ul> <li>If that role (defined in the JWT) do not have access to process that request:</li> <li>If the users with other roles instead of doctor role, then:</li> <li>Status Code: <code>403 Forbidden</code></li> </ul> </li> </ul> <pre><code>  {\n    \"message\": \"Forbidden: You do not have permission for this request\"\n  }\n</code></pre> <ul> <li>Invalid Credentials (401):<ul> <li>If the provided JWT token invalid:</li> <li>Status Code: <code>401 Unauthorized</code></li> </ul> </li> </ul> <pre><code>  {\n    \"message\": \"Invalid token\"\n  }\n</code></pre> <ul> <li>Internal Server Error (500):<ul> <li>If there\u2019s an unexpected error on the server:</li> <li>Status Code: <code>500 Internal Server Error</code></li> </ul> </li> </ul> <pre><code>  {\n    \"message\": \"Internal server error\"\n  }\n</code></pre>"},{"location":"Doctor/#get-patients-list-to-the-frontend-patients-list-page","title":"Get patient's list to the frontend patient\u2019s list page","text":""},{"location":"Doctor/#endpoint_2","title":"Endpoint:","text":"<pre><code>GET /doctor/patient\n</code></pre>"},{"location":"Doctor/#headers_1","title":"Headers:","text":"<pre><code>{\n  \"Authorization\": \"Bearer &lt;your_jwt_token&gt;\"\n}\n</code></pre>"},{"location":"Doctor/#response_2","title":"Response:","text":"<ul> <li>Success (200):<ul> <li>Successfully returned paients list:</li> </ul> </li> </ul> <pre><code>[\n  {\n    \"patientId\": \"Pa2045\",\n    \"messageStatus\": \"enable\",\n    \"priority\": 3,\n    \"lastVisit\": \"2025/02/10\"\n  },\n  {\n    \"patientId\": \"Pa2046\",\n    \"messageStatus\": \"disable\",\n    \"priority\": 1,\n    \"lastVisit\": \"2025/01/15\"\n  },\n  {\n    \"patientId\": \"Pa2047\",\n    \"messageStatus\": \"enable\",\n    \"priority\": 2,\n    \"lastVisit\": \"2025/02/05\"\n  },\n  {\n    \"patientId\": \"Pa2048\",\n    \"messageStatus\": \"enable\",\n    \"priority\": 1,\n    \"lastVisit\": \"2025/01/20\"\n  },\n  {\n    \"patientId\": \"Pa2049\",\n    \"messageStatus\": \"disable\",\n    \"priority\": 3,\n    \"lastVisit\": \"2025/02/01\"\n  }\n]\n</code></pre> <ul> <li>User not found (404):<ul> <li>If user not found in the database:</li> <li>Status Code: <code>404 Not Found</code></li> </ul> </li> </ul> <pre><code>  {\n    \"message\": \"User not found\"\n  }\n</code></pre> <ul> <li>Role do not have access (403):<ul> <li>If that role (defined in the JWT) do not have access to process that request:</li> <li>If the users with other roles instead of doctor role, then:</li> <li>Status Code: <code>403 Forbidden</code></li> </ul> </li> </ul> <pre><code>  {\n    \"message\": \"Forbidden: You do not have permission for this request\"\n  }\n</code></pre> <ul> <li>Invalid Credentials (401):<ul> <li>If the provided JWT token invalid:</li> <li>Status Code: <code>401 Unauthorized</code></li> </ul> </li> </ul> <pre><code>  {\n    \"message\": \"Invalid token\"\n  }\n</code></pre> <ul> <li>Internal Server Error (500):<ul> <li>If there\u2019s an unexpected error on the server:</li> <li>Status Code: <code>500 Internal Server Error</code></li> </ul> </li> </ul> <pre><code>  {\n    \"message\": \"Internal server error\"\n  }\n</code></pre>"},{"location":"Doctor/#add-new-patient-to-the-patients-list","title":"Add new patient to the patient\u2019s list","text":""},{"location":"Doctor/#endpoint_3","title":"Endpoint:","text":"<pre><code>POST /patient\n</code></pre>"},{"location":"Doctor/#headers_2","title":"Headers:","text":"<pre><code>{\n  \"Authorization\": \"Bearer &lt;your_jwt_token&gt;\"\n}\n</code></pre>"},{"location":"Doctor/#request-body_1","title":"Request Body:","text":"<pre><code>{\n    \"patientId\": \"Pa2047\",\n    \"messageStatus\": \"enable\",\n    \"priority\": 2,\n    \"lastVisit\": null\n}\n</code></pre>"},{"location":"Doctor/#response_3","title":"Response:","text":"<ul> <li>Success (200):<ul> <li>Successfully added patient to the patients list:</li> </ul> </li> </ul> <pre><code>{\n    \"message\": \"Successfully added to the patient's list\"\n}\n</code></pre> <ul> <li>Duplicate Field (409):<ul> <li>If that patient is already in the patient's list database:</li> <li>Status Code: <code>409 Conflict</code></li> </ul> </li> </ul> <pre><code>  {\n    \"message\": \"The patient is already in the list.\"\n  }\n</code></pre> <ul> <li>Role do not have access (403):<ul> <li>If that role (defined in the JWT) do not have access to process that request:</li> <li>If the users with other roles instead of doctor role, then:</li> <li>Status Code: <code>403 Forbidden</code></li> </ul> </li> </ul> <pre><code>  {\n    \"message\": \"Forbidden: You do not have permission for this request\"\n  }\n</code></pre> <ul> <li>Invalid Credentials (401):<ul> <li>If the provided JWT token invalid:</li> <li>Status Code: <code>401 Unauthorized</code></li> </ul> </li> </ul> <pre><code>  {\n    \"message\": \"Invalid token\"\n  }\n</code></pre> <ul> <li>Internal Server Error (500):<ul> <li>If there\u2019s an unexpected error on the server:</li> <li>Status Code: <code>500 Internal Server Error</code></li> </ul> </li> </ul> <pre><code>  {\n    \"message\": \"Internal server error\"\n  }\n</code></pre>"},{"location":"Doctor/#get-doctors-list-to-the-frontend-doctors-list-page","title":"Get doctor's list to the frontend doctor's list page","text":""},{"location":"Doctor/#endpoint_4","title":"Endpoint:","text":"<pre><code>GET /doctor/doctors\n</code></pre>"},{"location":"Doctor/#headers_3","title":"Headers:","text":"<pre><code>{\n  \"Authorization\": \"Bearer &lt;your_jwt_token&gt;\"\n}\n</code></pre>"},{"location":"Doctor/#response_4","title":"Response:","text":"<ul> <li>Success (200):<ul> <li>Successfully returned doctors list:</li> </ul> </li> </ul> <pre><code>[\n  {\n    \"doctortId\": \"D2045\",\n    \"messageStatus\": \"enable\"\n  },\n  {\n    \"doctortId\": \"D2046\",\n    \"messageStatus\": \"disable\"\n  },\n  {\n    \"doctortId\": \"D2047\",\n    \"messageStatus\": \"enable\"\n  },\n  {\n    \"doctortId\": \"D2048\",\n    \"messageStatus\": \"enable\"\n  },\n  {\n    \"doctortId\": \"D2049\",\n    \"messageStatus\": \"disable\"\n  }\n]\n</code></pre> <ul> <li>User not found (404):<ul> <li>If user not found in the database:</li> <li>Status Code: <code>404 Not Found</code></li> </ul> </li> </ul> <pre><code>  {\n    \"message\": \"User not found\"\n  }\n</code></pre> <ul> <li>Role do not have access (403):<ul> <li>If that role (defined in the JWT) do not have access to process that request:</li> <li>If the users with other roles instead of doctor role, then:</li> <li>Status Code: <code>403 Forbidden</code></li> </ul> </li> </ul> <pre><code>  {\n    \"message\": \"Forbidden: You do not have permission for this request\"\n  }\n</code></pre> <ul> <li>Invalid Credentials (401):<ul> <li>If the provided JWT token invalid:</li> <li>Status Code: <code>401 Unauthorized</code></li> </ul> </li> </ul> <pre><code>  {\n    \"message\": \"Invalid token\"\n  }\n</code></pre> <ul> <li>Internal Server Error (500):<ul> <li>If there\u2019s an unexpected error on the server:</li> <li>Status Code: <code>500 Internal Server Error</code></li> </ul> </li> </ul> <pre><code>  {\n    \"message\": \"Internal server error\"\n  }\n</code></pre>"},{"location":"Doctor/#add-new-doctor-to-the-doctors-list","title":"Add new doctor to the doctor's list","text":""},{"location":"Doctor/#endpoint_5","title":"Endpoint:","text":"<pre><code>POST /doctor\n</code></pre>"},{"location":"Doctor/#headers_4","title":"Headers:","text":"<pre><code>{\n  \"Authorization\": \"Bearer &lt;your_jwt_token&gt;\"\n}\n</code></pre>"},{"location":"Doctor/#request-body_2","title":"Request Body:","text":"<pre><code>{\n    \"doctortId\": \"D2047\",\n    \"messageStatus\": \"enable\",\n}\n</code></pre>"},{"location":"Doctor/#response_5","title":"Response:","text":"<ul> <li>Success (200):<ul> <li>Successfully added doctor to the doctor list:</li> </ul> </li> </ul> <pre><code>{\n    \"message\": \"Successfully added to the doctor's list\"\n}\n</code></pre> <ul> <li>Duplicate Field (409):<ul> <li>If that doctor is already in the doctor's list database:</li> <li>Status Code: <code>409 Conflict</code></li> </ul> </li> </ul> <pre><code>  {\n    \"message\": \"The doctor is already in the list.\"\n  }\n</code></pre> <ul> <li>Invalid Credentials (401):<ul> <li>If the provided JWT token invalid:</li> <li>Status Code: <code>401 Unauthorized</code></li> </ul> </li> </ul> <pre><code>  {\n    \"message\": \"Invalid token\"\n  }\n</code></pre> <ul> <li>Role do not have access (403):<ul> <li>If that role (defined in the JWT) do not have access to process that request:</li> <li>If the users with other roles instead of doctor role, then:</li> <li>Status Code: <code>403 Forbidden</code></li> </ul> </li> </ul> <pre><code>  {\n    \"message\": \"Forbidden: You do not have permission for this request\"\n  }\n</code></pre> <ul> <li>Internal Server Error (500):<ul> <li>If there\u2019s an unexpected error on the server:</li> <li>Status Code: <code>500 Internal Server Error</code></li> </ul> </li> </ul> <pre><code>  {\n    \"message\": \"Internal server error\"\n  }\n</code></pre>"},{"location":"Laboratory/","title":"Laboratory","text":""},{"location":"Laboratory/#register","title":"Register","text":""},{"location":"Laboratory/#endpoint","title":"Endpoint:","text":"<pre><code>POST /laboratory/register\n</code></pre>"},{"location":"Laboratory/#request-body","title":"Request Body:","text":"<pre><code>{\n  \"labName\": \"Advanced Diagnostic Center\",\n  \"location\": {\n    \"street\": \"456 Maple Avenue\",\n    \"city\": \"Los Angeles\",\n    \"state\": \"CA\",\n    \"zipCode\": \"90001\",\n    \"country\": \"USA\"\n  },\n  \"email\": \"contact@advanceddiagnostics.com\",\n  \"password\": \"SecureLabPass123!\",\n  \"contactNo\": \"+1-555-6789-123\",\n  \"GovRegId\": \"GOV-987654321\",\n  \"description\": \"A state-of-the-art diagnostic laboratory offering comprehensive medical testing services.\",\n  \"profilePic\": \"https://example.com/uploads/lab-profile.jpg\",\n  \"socialMediaLinks\": {\n    \"linkedin\": \"https://www.linkedin.com/in/####\",\n    \"twitter\": \"https://twitter.com/####\"\n  },\n}\n</code></pre>"},{"location":"Laboratory/#response","title":"Response:","text":"<ul> <li>Success (200):<ul> <li>When register is successful and return the Laboratory Id:</li> </ul> </li> </ul> <pre><code>{\n    \"message\": \"Successfully Registered\",\n    \"id\": \"L12345\"\n}\n</code></pre> <ul> <li>Missing Required Fields (400):<ul> <li>If the required field is missing:</li> <li>Status Code: <code>400 Bad Request</code></li> </ul> </li> </ul> <pre><code>  {\n    \"message\": \"The &lt;field&gt; field is required.\"\n  }\n</code></pre> <ul> <li>Fields Invalid Format (400):<ul> <li>If the required field is invalid:</li> <li>Status Code: <code>400 Bad Request</code></li> </ul> </li> </ul> <pre><code>  {\n    \"message\": \"Invalid &lt;field&gt;. Please provide valid &lt;field&gt;.\"\n  }\n</code></pre> <ul> <li>Duplicate Field (409):<ul> <li>If the unique fields like nicNo, govRegNo, email is already in the database:</li> <li>Status Code: <code>409 Conflict</code></li> </ul> </li> </ul> <pre><code>  {\n    \"message\": \"The &lt;field&gt; is already in use.\"\n  }\n</code></pre> <ul> <li>Data Type Mismatch (422):<ul> <li>If the dataType send was incorrect:</li> <li>Status Code: <code>422 Unprocessable Entity</code></li> </ul> </li> </ul> <pre><code>  {\n    \"message\": \"The &lt;field&gt; field must be &lt;dataType&gt;.\"\n  }\n</code></pre> <ul> <li>Internal Server Error (500):<ul> <li>If there\u2019s an unexpected error on the server:</li> <li>Status Code: <code>500 Internal Server Error</code></li> </ul> </li> </ul> <p><pre><code>  {\n    \"message\": \"Internal server error\"\n  }\n</code></pre> </p>"},{"location":"Laboratory/#get-data-that-required-in-the-laboratorys-home-page","title":"Get data that required in the laboratory's home page","text":""},{"location":"Laboratory/#endpoint_1","title":"Endpoint:","text":"<pre><code>GET /laboratory/home\n</code></pre>"},{"location":"Laboratory/#headers","title":"Headers:","text":"<pre><code>{\n  \"Authorization\": \"Bearer &lt;your_jwt_token&gt;\"\n}\n</code></pre>"},{"location":"Laboratory/#response_1","title":"Response:","text":"<ul> <li>Success (200):<ul> <li>Successfully returned data:</li> </ul> </li> </ul> <pre><code>{\n  \"labId\": \"LAB-2025001\",\n  \"labName\": \"Advanced Diagnostic Center\",\n  \"location\": {\n    \"street\": \"456 Maple Avenue\",\n    \"city\": \"Los Angeles\",\n    \"state\": \"CA\",\n    \"zipCode\": \"90001\",\n    \"country\": \"USA\"\n  },\n  \"email\": \"contact@advanceddiagnostics.com\",\n  \"contactNo\": \"+1-555-6789-123\",\n  \"GovRegId\": \"GOV-987654321\",\n  \"description\": \"A state-of-the-art diagnostic laboratory offering comprehensive medical testing services.\",\n  \"profilePic\": \"https://example.com/uploads/lab-profile.jpg\",\n  \"socialMediaLinks\": {\n    \"linkedin\": \"https://www.linkedin.com/in/####\",\n    \"twitter\": \"https://twitter.com/####\"\n  },\n  \"patientsCount\": 20\n}\n</code></pre> <ul> <li>User not found (404):<ul> <li>If user not found in the database:</li> <li>Status Code: <code>404 Not Found</code></li> </ul> </li> </ul> <pre><code>  {\n    \"message\": \"User not found\"\n  }\n</code></pre> <ul> <li>Invalid Credentials (401):<ul> <li>If the provided JWT token invalid:</li> <li>Status Code: <code>401 Unauthorized</code></li> </ul> </li> </ul> <pre><code>  {\n    \"message\": \"Invalid token\"\n  }\n</code></pre> <ul> <li>Role do not have access (403):<ul> <li>If that role (defined in the JWT) do not have access to process that request:</li> <li>If the users with other roles instead of laboratory role, then:</li> <li>Status Code: <code>403 Forbidden</code></li> </ul> </li> </ul> <pre><code>  {\n    \"message\": \"Forbidden: You do not have permission for this request\"\n  }\n</code></pre> <ul> <li>Internal Server Error (500):<ul> <li>If there\u2019s an unexpected error on the server:</li> <li>Status Code: <code>500 Internal Server Error</code></li> </ul> </li> </ul> <pre><code>  {\n    \"message\": \"Internal server error\"\n  }\n</code></pre>"},{"location":"Laboratory/#get-patients-list-to-the-frontend-patients-list-page","title":"Get patient's list to the frontend patient\u2019s list page","text":""},{"location":"Laboratory/#endpoint_2","title":"Endpoint:","text":"<pre><code>GET /laboratory/patients\n</code></pre>"},{"location":"Laboratory/#headers_1","title":"Headers:","text":"<pre><code>{\n  \"Authorization\": \"Bearer &lt;your_jwt_token&gt;\"\n}\n</code></pre>"},{"location":"Laboratory/#response_2","title":"Response:","text":"<ul> <li>Success (200):<ul> <li>Successfully returned patients list:</li> </ul> </li> </ul> <pre><code>[\n  {\n    \"patientId\": \"Pa2045\",\n    \"lastMessage\": \"2025/02/10\"\n  },\n  {\n    \"patientId\": \"Pa2046\",\n    \"lastMessage\": \"2025/01/15\"\n  },\n  {\n    \"patientId\": \"Pa2047\",\n    \"lastMessage\": \"2025/02/05\"\n  },\n  {\n    \"patientId\": \"Pa2048\",\n    \"lastMessage\": \"2025/01/20\"\n  },\n  {\n    \"patientId\": \"Pa2049\",\n    \"lastMessage\": \"2025/02/01\"\n  }\n]\n</code></pre> <ul> <li>User not found (404):<ul> <li>If user not found in the database:</li> <li>Status Code: <code>404 Not Found</code></li> </ul> </li> </ul> <pre><code>  {\n    \"message\": \"User not found\"\n  }\n</code></pre> <ul> <li>Invalid Credentials (401):<ul> <li>If the provided JWT token invalid:</li> <li>Status Code: <code>401 Unauthorized</code></li> </ul> </li> </ul> <pre><code>  {\n    \"message\": \"Invalid token\"\n  }\n</code></pre> <ul> <li>Role do not have access (403):<ul> <li>If that role (defined in the JWT) do not have access to process that request:</li> <li>If the users with other roles instead of laboratory role, then:</li> <li>Status Code: <code>403 Forbidden</code></li> </ul> </li> </ul> <pre><code>  {\n    \"message\": \"Forbidden: You do not have permission for this request\"\n  }\n</code></pre> <ul> <li>Internal Server Error (500):<ul> <li>If there\u2019s an unexpected error on the server:</li> <li>Status Code: <code>500 Internal Server Error</code></li> </ul> </li> </ul> <pre><code>  {\n    \"message\": \"Internal server error\"\n  }\n</code></pre>"},{"location":"Patient/","title":"Patient","text":""},{"location":"Patient/#register","title":"Register","text":""},{"location":"Patient/#endpoint","title":"Endpoint:","text":"<pre><code>POST /patient/register\n</code></pre>"},{"location":"Patient/#request-body","title":"Request Body:","text":"<pre><code>{\n  \"patientId\": \"P-2025001\",\n  \"name\": {\n    \"firstname\": \"John\",\n    \"middlename\": \"Michael\",\n    \"lastname\": \"Doe\"\n  },\n  \"address\": {\n    \"street\": \"123 Elm Street\",\n    \"city\": \"New York\",\n    \"state\": \"NY\",\n    \"zipCode\": \"10001\",\n    \"country\": \"USA\"\n  },\n  \"nicNo\": \"987654321V\",\n  \"mobileNo\": \"+1-555-1234-567\",\n  \"email\": \"johndoe@example.com\",\n  \"password\": \"SecurePass123!\",\n  \"birthOfDate\": \"1990-05-15\",\n  \"GuardianName\": \"Jane Doe\",\n  \"GuardianContactNo\": \"+1-555-9876-543\",\n  \"GuardianEmail\": \"janedoe@example.com\",\n  \"Weight\": 75.5,\n  \"Height\": 1.75,\n  \"BMI\": 24.7, \n  \"profilePic\": \"https://example.com/uploads/johndoe-profile.jpg\"\n}\n</code></pre>"},{"location":"Patient/#response","title":"Response:","text":"<ul> <li>Success (200):<ul> <li>When register is successful and return the Patient Id:</li> </ul> </li> </ul> <pre><code>{\n    \"message\": \"Successfully Registered\",\n    \"id\": \"Pa12345\"\n}\n</code></pre> <ul> <li>Missing Required Fields (400):<ul> <li>If the required field is missing:</li> <li>Status Code: <code>400 Bad Request</code></li> </ul> </li> </ul> <pre><code>  {\n    \"message\": \"The &lt;field&gt; field is required.\"\n  }\n</code></pre> <ul> <li>Fields Invalid Format (400):<ul> <li>If the required field is invalid:</li> <li>Status Code: <code>400 Bad Request</code></li> </ul> </li> </ul> <pre><code>  {\n    \"message\": \"Invalid &lt;field&gt;. Please provide valid &lt;field&gt;.\"\n  }\n</code></pre> <ul> <li>Duplicate Field (409):<ul> <li>If the unique fields like nicNo, email is already in the database:</li> <li>Status Code: <code>409 Conflict</code></li> </ul> </li> </ul> <pre><code>  {\n    \"message\": \"The &lt;field&gt; is already in use.\"\n  }\n</code></pre> <ul> <li>Data Type Mismatch (422):<ul> <li>If the dataType send was incorrect:</li> <li>Status Code: <code>422 Unprocessable Entity</code></li> </ul> </li> </ul> <pre><code>  {\n    \"message\": \"The &lt;field&gt; field must be &lt;dataType&gt;.\"\n  }\n</code></pre> <ul> <li>Internal Server Error (500):<ul> <li>If there\u2019s an unexpected error on the server:</li> <li>Status Code: <code>500 Internal Server Error</code></li> </ul> </li> </ul> <pre><code>  {\n    \"message\": \"Internal server error\"\n  }\n</code></pre>"},{"location":"Patient/#get-data-that-required-in-the-patients-home-page","title":"Get data that required in the patient's home page","text":""},{"location":"Patient/#endpoint_1","title":"Endpoint:","text":"<pre><code>GET /patient/home\n</code></pre>"},{"location":"Patient/#headers","title":"Headers:","text":"<pre><code>{\n  \"Authorization\": \"Bearer &lt;your_jwt_token&gt;\"\n}\n</code></pre>"},{"location":"Patient/#response_1","title":"Response:","text":"<ul> <li>Success (200):<ul> <li>Successfully returned data:</li> </ul> </li> </ul> <pre><code>{\n  \"patientId\": \"P-2025001\",\n  \"name\": {\n    \"firstname\": \"John\",\n    \"middlename\": \"Michael\",\n    \"lastname\": \"Doe\"\n  },\n  \"address\": {\n    \"street\": \"123 Elm Street\",\n    \"city\": \"New York\",\n    \"state\": \"NY\",\n    \"zipCode\": \"10001\",\n    \"country\": \"USA\"\n  },\n  \"nicNo\": \"987654321V\",\n  \"mobileNo\": \"+1-555-1234-567\",\n  \"email\": \"johndoe@example.com\",\n  \"birthOfDate\": \"1990-05-15\",\n  \"GuardianName\": \"Jane Doe\",\n  \"GuardianContactNo\": \"+1-555-9876-543\",\n  \"GuardianEmail\": \"janedoe@example.com\",\n  \"Weight\": 75.5,\n  \"Height\": 1.75,\n  \"BMI\": 24.7, \n  \"profilePic\": \"https://example.com/uploads/johndoe-profile.jpg\",\n  \"doctorsCount\": 20\n}\n</code></pre> <ul> <li>User not found (404):<ul> <li>If user not found in the database:</li> <li>Status Code: <code>404 Not Found</code></li> </ul> </li> </ul> <pre><code>  {\n    \"message\": \"User not found\"\n  }\n</code></pre> <ul> <li>Invalid Credentials (401):<ul> <li>If the provided JWT token invalid:</li> <li>Status Code: <code>401 Unauthorized</code></li> </ul> </li> </ul> <pre><code>  {\n    \"message\": \"Invalid token\"\n  }\n</code></pre> <ul> <li>Role do not have access (403):<ul> <li>If that role (defined in the JWT) do not have access to process that request:</li> <li>If the users with other roles instead of patient role, then:</li> <li>Status Code: <code>403 Forbidden</code></li> </ul> </li> </ul> <pre><code>  {\n    \"message\": \"Forbidden: You do not have permission for this request\"\n  }\n</code></pre> <ul> <li>Internal Server Error (500):<ul> <li>If there\u2019s an unexpected error on the server:</li> <li>Status Code: <code>500 Internal Server Error</code></li> </ul> </li> </ul> <pre><code>  {\n    \"message\": \"Internal server error\"\n  }\n</code></pre>"},{"location":"Patient/#get-doctors-list-to-the-frontend-doctors-list-page","title":"Get doctor's list to the frontend doctor's list page","text":""},{"location":"Patient/#endpoint_2","title":"Endpoint:","text":"<pre><code>GET /patient/doctors\n</code></pre>"},{"location":"Patient/#headers_1","title":"Headers:","text":"<pre><code>{\n  \"Authorization\": \"Bearer &lt;your_jwt_token&gt;\"\n}\n</code></pre>"},{"location":"Patient/#response_2","title":"Response:","text":"<ul> <li>Success (200):<ul> <li>Successfully returned doctor list:</li> </ul> </li> </ul> <pre><code>[\n  {\n    \"doctorId\": \"D2045\",\n    \"messageStatus\": \"enable\",\n    \"lastVisit\": \"2025/02/10\"\n  },\n  {\n    \"doctorId\": \"D2046\",\n    \"messageStatus\": \"disable\",\n    \"lastVisit\": \"2025/01/15\"\n  },\n  {\n    \"doctorId\": \"D2047\",\n    \"messageStatus\": \"enable\",\n    \"lastVisit\": \"2025/02/05\"\n  },\n  {\n    \"doctorId\": \"D2048\",\n    \"messageStatus\": \"enable\",\n    \"lastVisit\": \"2025/01/20\"\n  },\n  {\n    \"doctorId\": \"D2049\",\n    \"messageStatus\": \"disable\",\n    \"lastVisit\": \"2025/02/01\"\n  }\n]\n</code></pre> <ul> <li>User not found (404):<ul> <li>If user not found in the database:</li> <li>Status Code: <code>404 Not Found</code></li> </ul> </li> </ul> <pre><code>  {\n    \"message\": \"User not found\"\n  }\n</code></pre> <ul> <li>Invalid Credentials (401):<ul> <li>If the provided JWT token invalid:</li> <li>Status Code: <code>401 Unauthorized</code></li> </ul> </li> </ul> <pre><code>  {\n    \"message\": \"Invalid token\"\n  }\n</code></pre> <ul> <li>Role do not have access (403):<ul> <li>If that role (defined in the JWT) do not have access to process that request:</li> <li>If the users with other roles instead of patient role, then:</li> <li>Status Code: <code>403 Forbidden</code></li> </ul> </li> </ul> <pre><code>  {\n    \"message\": \"Forbidden: You do not have permission for this request\"\n  }\n</code></pre> <ul> <li>Internal Server Error (500):<ul> <li>If there\u2019s an unexpected error on the server:</li> <li>Status Code: <code>500 Internal Server Error</code></li> </ul> </li> </ul> <pre><code>  {\n    \"message\": \"Internal server error\"\n  }\n</code></pre>"},{"location":"Patient/#get-laboratory-list-to-the-frontend-laboratory-list-page","title":"Get laboratory list to the frontend laboratory list page","text":""},{"location":"Patient/#endpoint_3","title":"Endpoint:","text":"<pre><code>GET /patient/laboratories\n</code></pre>"},{"location":"Patient/#headers_2","title":"Headers:","text":"<pre><code>{\n  \"Authorization\": \"Bearer &lt;your_jwt_token&gt;\"\n}\n</code></pre>"},{"location":"Patient/#response_3","title":"Response:","text":"<ul> <li>Success (200):<ul> <li>Successfully returned laboratory list:</li> </ul> </li> </ul> <pre><code>[\n  {\n    \"labId\": \"L2045\",\n    \"lastMessage\": \"2025/02/10\"\n  },\n  {\n    \"labId\": \"L2046\",\n    \"lastMessage\": \"2025/01/15\"\n  },\n  {\n    \"labId\": \"L2047\",\n    \"lastMessage\": \"2025/02/05\"\n  },\n  {\n    \"labId\": \"L2048\",\n    \"lastMessage\": \"2025/01/20\"\n  },\n  {\n    \"labId\": \"LD2049\",\n    \"lastMessage\": \"2025/02/01\"\n  }\n]\n</code></pre> <ul> <li>User not found (404):<ul> <li>If user not found in the database:</li> <li>Status Code: <code>404 Not Found</code></li> </ul> </li> </ul> <pre><code>  {\n    \"message\": \"User not found\"\n  }\n</code></pre> <ul> <li>Invalid Credentials (401):<ul> <li>If the provided JWT token invalid:</li> <li>Status Code: <code>401 Unauthorized</code></li> </ul> </li> </ul> <pre><code>  {\n    \"message\": \"Invalid token\"\n  }\n</code></pre> <ul> <li>Role do not have access (403):<ul> <li>If that role (defined in the JWT) do not have access to process that request:</li> <li>If the users with other roles instead of patient role, then:</li> <li>Status Code: <code>403 Forbidden</code></li> </ul> </li> </ul> <pre><code>  {\n    \"message\": \"Forbidden: You do not have permission for this request\"\n  }\n</code></pre> <ul> <li>Internal Server Error (500):<ul> <li>If there\u2019s an unexpected error on the server:</li> <li>Status Code: <code>500 Internal Server Error</code></li> </ul> </li> </ul> <pre><code>  {\n    \"message\": \"Internal server error\"\n  }\n</code></pre>"},{"location":"Patient/#add-new-laboratory-to-the-laboratories-list","title":"Add new laboratory to the laboratories list","text":""},{"location":"Patient/#endpoint_4","title":"Endpoint:","text":"<pre><code>POST /laboratory\n</code></pre>"},{"location":"Patient/#headers_3","title":"Headers:","text":"<pre><code>{\n  \"Authorization\": \"Bearer &lt;your_jwt_token&gt;\"\n}\n</code></pre>"},{"location":"Patient/#request-body_1","title":"Request Body:","text":"<pre><code>{\n    \"labId\": \"L2047\",\n    \"lastMessage\": null\n}\n</code></pre>"},{"location":"Patient/#response_4","title":"Response:","text":"<ul> <li>Success (200):<ul> <li>Successfully added laboratory to the laboratory list:</li> </ul> </li> </ul> <pre><code>{\n    \"message\": \"Successfully added to the laboratory's list\"\n}\n</code></pre> <ul> <li>Duplicate Field (409):<ul> <li>If that laboratory is already in the laboratory's list database:</li> <li>Status Code: <code>409 Conflict</code></li> </ul> </li> </ul> <pre><code>  {\n    \"message\": \"The laboratory is already in the list.\"\n  }\n</code></pre> <ul> <li>Invalid Credentials (401):<ul> <li>If the provided JWT token invalid:</li> <li>Status Code: <code>401 Unauthorized</code></li> </ul> </li> </ul> <pre><code>  {\n    \"message\": \"Invalid token\"\n  }\n</code></pre> <ul> <li>Role do not have access (403):<ul> <li>If that role (defined in the JWT) do not have access to process that request:</li> <li>If the users with other roles instead of patient role, then:</li> <li>Status Code: <code>403 Forbidden</code></li> </ul> </li> </ul> <pre><code>  {\n    \"message\": \"Forbidden: You do not have permission for this request\"\n  }\n</code></pre> <ul> <li>Internal Server Error (500):<ul> <li>If there\u2019s an unexpected error on the server:</li> <li>Status Code: <code>500 Internal Server Error</code></li> </ul> </li> </ul> <pre><code>  {\n    \"message\": \"Internal server error\"\n  }\n</code></pre>"},{"location":"Patient/#get-pharmacy-list-to-the-frontend-pharmacy-list-page","title":"Get pharmacy list to the frontend pharmacy list page","text":""},{"location":"Patient/#endpoint_5","title":"Endpoint:","text":"<pre><code>GET /patient/pharmacies\n</code></pre>"},{"location":"Patient/#headers_4","title":"Headers:","text":"<pre><code>{\n  \"Authorization\": \"Bearer &lt;your_jwt_token&gt;\"\n}\n</code></pre>"},{"location":"Patient/#response_5","title":"Response:","text":"<ul> <li>Success (200):<ul> <li>Successfully returned pharmacy list:</li> </ul> </li> </ul> <pre><code>[\n  {\n    \"pharmacyId\": \"Ph2045\",\n    \"lastMessage\": \"2025/02/10\"\n  },\n  {\n    \"pharmacyId\": \"Ph2046\",\n    \"lastMessage\": \"2025/01/15\"\n  },\n  {\n    \"pharmacyId\": \"Ph2047\",\n    \"lastMessage\": \"2025/02/05\"\n  },\n  {\n    \"pharmacyId\": \"Ph2048\",\n    \"lastMessage\": \"2025/01/20\"\n  },\n  {\n    \"pharmacyId\": \"PhD2049\",\n    \"lastMessage\": \"2025/02/01\"\n  }\n]\n</code></pre> <ul> <li>User not found (404):<ul> <li>If user not found in the database:</li> <li>Status Code: <code>404 Not Found</code></li> </ul> </li> </ul> <pre><code>  {\n    \"message\": \"User not found\"\n  }\n</code></pre> <ul> <li>Invalid Credentials (401):<ul> <li>If the provided JWT token invalid:</li> <li>Status Code: <code>401 Unauthorized</code></li> </ul> </li> </ul> <pre><code>  {\n    \"message\": \"Invalid token\"\n  }\n</code></pre> <ul> <li>Role do not have access (403):<ul> <li>If that role (defined in the JWT) do not have access to process that request:</li> <li>If the users with other roles instead of patient role, then:</li> <li>Status Code: <code>403 Forbidden</code></li> </ul> </li> </ul> <pre><code>  {\n    \"message\": \"Forbidden: You do not have permission for this request\"\n  }\n</code></pre> <ul> <li>Internal Server Error (500):<ul> <li>If there\u2019s an unexpected error on the server:</li> <li>Status Code: <code>500 Internal Server Error</code></li> </ul> </li> </ul> <pre><code>  {\n    \"message\": \"Internal server error\"\n  }\n</code></pre>"},{"location":"Patient/#add-new-pharmacy-to-the-pharmacies-list","title":"Add new pharmacy to the pharmacies list","text":""},{"location":"Patient/#endpoint_6","title":"Endpoint:","text":"<pre><code>POST /pharmacy\n</code></pre>"},{"location":"Patient/#headers_5","title":"Headers:","text":"<pre><code>{\n  \"Authorization\": \"Bearer &lt;your_jwt_token&gt;\"\n}\n</code></pre>"},{"location":"Patient/#request-body_2","title":"Request Body:","text":"<pre><code>{\n    \"pharmacyId\": \"Ph2047\",\n    \"lastMessage\": null\n}\n</code></pre>"},{"location":"Patient/#response_6","title":"Response:","text":"<ul> <li>Success (200):<ul> <li>Successfully added pharmacy to the pharmacy list:</li> </ul> </li> </ul> <pre><code>{\n    \"message\": \"Successfully added to the pharmacy's list\"\n}\n</code></pre> <ul> <li>Duplicate Field (409):<ul> <li>If that pharmacy is already in the pharmacy's list database:</li> <li>Status Code: <code>409 Conflict</code></li> </ul> </li> </ul> <pre><code>  {\n    \"message\": \"The pharmacy is already in the list.\"\n  }\n</code></pre> <ul> <li>Invalid Credentials (401):<ul> <li>If the provided JWT token invalid:</li> <li>Status Code: <code>401 Unauthorized</code></li> </ul> </li> </ul> <pre><code>  {\n    \"message\": \"Invalid token\"\n  }\n</code></pre> <ul> <li>Role do not have access (403):<ul> <li>If that role (defined in the JWT) do not have access to process that request:</li> <li>If the users with other roles instead of patient role, then:</li> <li>Status Code: <code>403 Forbidden</code></li> </ul> </li> </ul> <pre><code>  {\n    \"message\": \"Forbidden: You do not have permission for this request\"\n  }\n</code></pre> <ul> <li>Internal Server Error (500):<ul> <li>If there\u2019s an unexpected error on the server:</li> <li>Status Code: <code>500 Internal Server Error</code></li> </ul> </li> </ul> <pre><code>  {\n    \"message\": \"Internal server error\"\n  }\n</code></pre>"},{"location":"Pharmacy/","title":"Pharmacy","text":""},{"location":"Pharmacy/#register","title":"Register","text":""},{"location":"Pharmacy/#endpoint","title":"Endpoint:","text":"<pre><code>POST /pharmacy/register\n</code></pre>"},{"location":"Pharmacy/#request-body","title":"Request Body:","text":"<pre><code>{\n  \"pharmacyName\": \"City Health Pharmacy\",\n  \"location\": {\n    \"street\": \"789 Oak Street\",\n    \"city\": \"New York\",\n    \"state\": \"NY\",\n    \"zipCode\": \"10001\",\n    \"country\": \"USA\"\n  },\n  \"email\": \"info@cityhealthpharmacy.com\",\n  \"password\": \"SecurePharmPass123!\",\n  \"contactNo\": \"+1-555-4321-789\",\n  \"GovRegId\": \"GOV-123456789\",\n  \"description\": \"A licensed pharmacy providing prescription medications and healthcare products.\",\n  \"profilePic\": \"https://example.com/uploads/pharmacy-profile.jpg\",\n  \"socialMediaLinks\": {\n    \"linkedin\": \"https://www.linkedin.com/in/####\",\n    \"twitter\": \"https://twitter.com/####\"\n  },\n}\n</code></pre>"},{"location":"Pharmacy/#response","title":"Response:","text":"<ul> <li>Success (200):<ul> <li>When register is successful and return the Pharmacy Id:</li> </ul> </li> </ul> <pre><code>{\n    \"message\": \"Successfully Registered\",\n    \"id\": \"Ph12345\"\n}\n</code></pre> <ul> <li>Missing Required Fields (400):<ul> <li>If the required field is missing:</li> <li>Status Code: <code>400 Bad Request</code></li> </ul> </li> </ul> <pre><code>  {\n    \"message\": \"The &lt;field&gt; field is required.\"\n  }\n</code></pre> <ul> <li>Fields Invalid Format (400):<ul> <li>If the required field is invalid:</li> <li>Status Code: <code>400 Bad Request</code></li> </ul> </li> </ul> <pre><code>  {\n    \"message\": \"Invalid &lt;field&gt;. Please provide valid &lt;field&gt;.\"\n  }\n</code></pre> <ul> <li>Duplicate Field (409):<ul> <li>If the unique fields like nicNo, govRegNo, email is already in the database:</li> <li>Status Code: <code>409 Conflict</code></li> </ul> </li> </ul> <pre><code>  {\n    \"message\": \"The &lt;field&gt; is already in use.\"\n  }\n</code></pre> <ul> <li>Data Type Mismatch (422):<ul> <li>If the dataType send was incorrect:</li> <li>Status Code: <code>422 Unprocessable Entity</code></li> </ul> </li> </ul> <pre><code>  {\n    \"message\": \"The &lt;field&gt; field must be &lt;dataType&gt;.\"\n  }\n</code></pre> <ul> <li>Internal Server Error (500):<ul> <li>If there\u2019s an unexpected error on the server:</li> <li>Status Code: <code>500 Internal Server Error</code></li> </ul> </li> </ul> <p><pre><code>  {\n    \"message\": \"Internal server error\"\n  }\n</code></pre> </p>"},{"location":"Pharmacy/#get-data-that-required-in-the-pharmacys-home-page","title":"Get data that required in the pharmacy's home page","text":""},{"location":"Pharmacy/#endpoint_1","title":"Endpoint:","text":"<pre><code>GET /pharmacy/home\n</code></pre>"},{"location":"Pharmacy/#headers","title":"Headers:","text":"<pre><code>{\n  \"Authorization\": \"Bearer &lt;your_jwt_token&gt;\"\n}\n</code></pre>"},{"location":"Pharmacy/#response_1","title":"Response:","text":"<ul> <li>Success (200):<ul> <li>Successfully returned data:</li> </ul> </li> </ul> <pre><code>{\n  \"pharmacyId\": \"PHARM-2025001\",\n  \"pharmacyName\": \"City Health Pharmacy\",\n  \"location\": {\n    \"street\": \"789 Oak Street\",\n    \"city\": \"New York\",\n    \"state\": \"NY\",\n    \"zipCode\": \"10001\",\n    \"country\": \"USA\"\n  },\n  \"email\": \"info@cityhealthpharmacy.com\",\n  \"contactNo\": \"+1-555-4321-789\",\n  \"GovRegId\": \"GOV-123456789\",\n  \"description\": \"A licensed pharmacy providing prescription medications and healthcare products.\",\n  \"profilePic\": \"https://example.com/uploads/pharmacy-profile.jpg\",\n  \"socialMediaLinks\": {\n    \"linkedin\": \"https://www.linkedin.com/in/####\",\n    \"twitter\": \"https://twitter.com/####\"\n  },\n  \"patientsCount\": 20\n}\n</code></pre> <ul> <li>User not found (404):<ul> <li>If user not found in the database:</li> <li>Status Code: <code>404 Not Found</code></li> </ul> </li> </ul> <pre><code>  {\n    \"message\": \"User not found\"\n  }\n</code></pre> <ul> <li>Invalid Credentials (401):<ul> <li>If the provided JWT token invalid:</li> <li>Status Code: <code>401 Unauthorized</code></li> </ul> </li> </ul> <pre><code>  {\n    \"message\": \"Invalid token\"\n  }\n</code></pre> <ul> <li>Role do not have access (403):<ul> <li>If that role (defined in the JWT) do not have access to process that request:</li> <li>If the users with other roles instead of pharmacy role, then:</li> <li>Status Code: <code>403 Forbidden</code></li> </ul> </li> </ul> <pre><code>  {\n    \"message\": \"Forbidden: You do not have permission for this request\"\n  }\n</code></pre> <ul> <li>Internal Server Error (500):<ul> <li>If there\u2019s an unexpected error on the server:</li> <li>Status Code: <code>500 Internal Server Error</code></li> </ul> </li> </ul> <pre><code>  {\n    \"message\": \"Internal server error\"\n  }\n</code></pre>"},{"location":"Pharmacy/#get-patients-list-to-the-frontend-patients-list-page","title":"Get patient's list to the frontend patient\u2019s list page","text":""},{"location":"Pharmacy/#endpoint_2","title":"Endpoint:","text":"<pre><code>GET /pharmacy/patients\n</code></pre>"},{"location":"Pharmacy/#headers_1","title":"Headers:","text":"<pre><code>{\n  \"Authorization\": \"Bearer &lt;your_jwt_token&gt;\"\n}\n</code></pre>"},{"location":"Pharmacy/#response_2","title":"Response:","text":"<ul> <li>Success (200):<ul> <li>Successfully returned patients list:</li> </ul> </li> </ul> <pre><code>[\n  {\n    \"patientId\": \"Pa2045\",\n    \"lastMessage\": \"2025/02/10\"\n  },\n  {\n    \"patientId\": \"Pa2046\",\n    \"lastMessage\": \"2025/01/15\"\n  },\n  {\n    \"patientId\": \"Pa2047\",\n    \"lastMessage\": \"2025/02/05\"\n  },\n  {\n    \"patientId\": \"Pa2048\",\n    \"lastMessage\": \"2025/01/20\"\n  },\n  {\n    \"patientId\": \"Pa2049\",\n    \"lastMessage\": \"2025/02/01\"\n  }\n]\n</code></pre> <ul> <li>User not found (404):<ul> <li>If user not found in the database:</li> <li>Status Code: <code>404 Not Found</code></li> </ul> </li> </ul> <pre><code>  {\n    \"message\": \"User not found\"\n  }\n</code></pre> <ul> <li>Invalid Credentials (401):<ul> <li>If the provided JWT token invalid:</li> <li>Status Code: <code>401 Unauthorized</code></li> </ul> </li> </ul> <pre><code>  {\n    \"message\": \"Invalid token\"\n  }\n</code></pre> <ul> <li>Role do not have access (403):<ul> <li>If that role (defined in the JWT) do not have access to process that request:</li> <li>If the users with other roles instead of pharmacy role, then:</li> <li>Status Code: <code>403 Forbidden</code></li> </ul> </li> </ul> <pre><code>  {\n    \"message\": \"Forbidden: You do not have permission for this request\"\n  }\n</code></pre> <ul> <li>Internal Server Error (500):<ul> <li>If there\u2019s an unexpected error on the server:</li> <li>Status Code: <code>500 Internal Server Error</code></li> </ul> </li> </ul> <pre><code>  {\n    \"message\": \"Internal server error\"\n  }\n</code></pre>"}]}