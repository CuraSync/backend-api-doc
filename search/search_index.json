{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home Page","text":"<p>This documentation outlines the backend endpoints for the CuraSync application, detailing their purpose, request structures, and expected response formats.</p> <p>Unlike traditional API documentation, which is typically written after development, this documentation has been created before backend implementation. The reason for this approach is to provide the frontend team with a clear understanding of:</p> <p>\u2705 The required request structure \u2013 What data needs to be sent in each API request. \u2705 Expected response formats \u2013 The structure and type of data each endpoint will return. \u2705 Error handling and status codes \u2013 How to handle various responses from the backend.</p> <p>By defining the API in advance, we ensure a seamless integration between frontend and backend development, allowing both teams to work in parallel efficiently.</p> <p>API Categories by User Roles The CuraSync API is organized into different categories based on user roles. Each category contains endpoints specific to that role\u2019s functionality:</p> <ul> <li> <p>Common \u2013 Includes endpoints shared across all user roles, such as authentication (<code>/login</code>, <code>/logout</code>) and general system interactions.</p> </li> <li> <p>Doctor  \u2013 Contains endpoints for doctors to manage patient records, write prescriptions, view reports, and track medical histories.</p> </li> <li> <p>Patient  \u2013 Provides endpoints for patients to access their medical history, view prescriptions, receive lab reports, and manage their profile.</p> </li> <li> <p>Laboratory  \u2013 Includes endpoints for laboratories to upload test reports, associate them with patient records, and send notifications upon completion.</p> </li> <li> <p>Pharmacy  \u2013 Features endpoints that allow pharmacies to verify prescriptions, process medication requests, and check availability of medicines.</p> </li> </ul>"},{"location":"Common/","title":"Common","text":""},{"location":"Common/#login","title":"Login","text":""},{"location":"Common/#endpoint","title":"Endpoint:","text":"<pre><code>POST /login\n</code></pre>"},{"location":"Common/#request-body","title":"Request Body:","text":"<pre><code>{\n  \"role\": \"doctor\",             // Role of the user: doctor, patient, pharmacy, lab\n  \"credential_type\": \"email\",   // Type of credential: id or email\n  \"credential_data\": \"admin@example.com\", // The actual id or email\n  \"password\": \"adminPass123\"     // Password for the user\n}\n</code></pre>"},{"location":"Common/#response","title":"Response:","text":"<ul> <li>Success (200):<ul> <li>When login is successful and JWT is generated:</li> </ul> </li> </ul> <pre><code>{\n    \"message\": \"Login successful\",\n    \"token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJyb2xlIjoiYWRtaW4iLCJpZCI6IjEyMyJ9.bWIsfdxTYwHfkl5o3fTn\"\n}\n</code></pre> <ul> <li>Invalid Role (400):<ul> <li>If the role provided in the request body is invalid:</li> <li>Status Code: <code>400 Bad Request</code></li> </ul> </li> </ul> <pre><code>  {\n    \"message\": \"Invalid role\"\n  }\n</code></pre> <ul> <li>Invalid Credentials (401):<ul> <li>If the provided credentials do not match any user in the database:</li> <li>Status Code: <code>401 Unauthorized</code></li> </ul> </li> </ul> <pre><code>  {\n    \"message\": \"Invalid credentials\"\n  }\n</code></pre> <ul> <li>Internal Server Error (500):<ul> <li>If there\u2019s an unexpected error on the server:</li> <li>Status Code: <code>500 Internal Server Error</code></li> </ul> </li> </ul> <p><pre><code>  {\n    \"message\": \"Internal server error\"\n  }\n</code></pre> </p>"},{"location":"Common/#get-profile-details","title":"Get Profile Details","text":""},{"location":"Common/#endpoint_1","title":"Endpoint:","text":"<pre><code>GET /profile\n</code></pre>"},{"location":"Common/#headers","title":"Headers:","text":"<pre><code>{\n  \"Authorization\": \"Bearer &lt;your_jwt_token&gt;\"\n}\n</code></pre>"},{"location":"Common/#response_1","title":"Response:","text":"<ul> <li>Success (200):<ul> <li>Successfully retrieved profile:</li> </ul> </li> </ul> <pre><code>{\n  \"id\": \"123456\",\n  \"name\": \"John Doe\",\n  \"email\": \"john@example.com\",\n  \"role\": \"doctor\",\n  \"specialty\": \"Cardiology\"\n}\n</code></pre> <ul> <li>Invalid Role (400):<ul> <li>If the role provided in the request body is invalid:</li> <li>Status Code: <code>400 Bad Request</code></li> </ul> </li> </ul> <pre><code>  {\n    \"message\": \"Invalid role\"\n  }\n</code></pre> <ul> <li>User not found (404):<ul> <li>If user not found in the database:</li> <li>Status Code: <code>404 Not Found</code></li> </ul> </li> </ul> <pre><code>  {\n    \"message\": \"User not found\"\n  }\n</code></pre> <ul> <li>Internal Server Error (500):<ul> <li>If there\u2019s an unexpected error on the server:</li> <li>Status Code: <code>500 Internal Server Error</code></li> </ul> </li> </ul> <pre><code>  {\n    \"message\": \"Internal server error\"\n  }\n</code></pre>"}]}